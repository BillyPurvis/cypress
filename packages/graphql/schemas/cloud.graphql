### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Cloud"""
interface CloudEdge {
  node: Node!
}

"""
A CloudOrganization represents an Organization stored in the Cypress Cloud
"""
type CloudOrganization implements Node {
  """Globally unique identifier representing a concrete GraphQL ObjectType"""
  id: ID!

  """Name of the organization"""
  name: String
}

"""A CloudProject represents a Project stored in the Cypress Cloud"""
type CloudProject implements Node {
  """Globally unique identifier representing a concrete GraphQL ObjectType"""
  id: ID!

  """The organization the project is a member of"""
  organization: CloudOrganization
  runs(after: Int, before: Int, first: Int, last: Int): CloudRunConnection

  """Unique identifier for a Project"""
  slug: String!
}

"""A Connection adhering to the Relay Specification"""
type CloudProjectConnection {
  """Auto-generated by nexus-decorators as the objectType is missing fields"""
  todo: Boolean
}

type CloudProjectEdge {
  """Auto-generated by nexus-decorators as the objectType is missing fields"""
  todo: Boolean
}

type CloudRecordKey implements Node {
  """Globally unique identifier representing a concrete GraphQL ObjectType"""
  id: ID!
}

"""A Recorded run of the Test Runner, typically to the cloud"""
type CloudRun implements Node {
  commitInfo: CloudRunCommitInfo
  createdAt: Date

  """Globally unique identifier representing a concrete GraphQL ObjectType"""
  id: ID!
  status: CloudRunStatus

  """
  Total duration of the run in milliseconds, accounting for any parallelization
  """
  totalDuration: Int

  """This is the number of failed tests across all groups in the run"""
  totalFailed: Int

  """This is the number of passed tests across all groups in the run"""
  totalPassed: Int

  """This is the number of pending tests across all groups in the run"""
  totalPending: Int

  """This is the number of running tests across all groups in the run"""
  totalRunning: Int

  """This is the number of skipped tests across all groups in the run"""
  totalSkipped: Int

  """This is the number of tests across all groups in the run"""
  totalTests: Int
}

type CloudRunCommitInfo {
  authorAvatar: String
  authorEmail: String
  authorName: String
  branch: String
  branchUrl: String
  message(
    """Number of characters to truncate the commit message to"""
    truncate: Int
  ): String
  sha: String
  summary: String
  url: String
}

type CloudRunConnection {
  edges: [CloudRunEdge]
  nodes: [CloudRun]
  pageInfo: PageInfo!
}

type CloudRunEdge {
  cursor: String
  node: CloudRun
}

"""Possible check status of the test run"""
enum CloudRunStatus {
  CANCELLED
  ERRORED
  FAILED
  NOTESTS
  OVERLIMIT
  PASSED
  RUNNING
  TIMEDOUT
}

"""A CloudUser represents an User stored in the Cypress Cloud"""
type CloudUser implements Node {
  """The display name of the user, if we have one"""
  fullName: String

  """Globally unique identifier representing a concrete GraphQL ObjectType"""
  id: ID!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format
outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""Mutations for the Cypress Cloud"""
type Mutation {
  """Adding as a test"""
  test: Boolean
}

"""Implements the Relay Node spec"""
interface Node {
  """Globally unique identifier representing a concrete GraphQL ObjectType"""
  id: ID!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  """Lookup an individual project by the slug"""
  cloudProject(slug: String!): CloudProject
  cloudProjectsByIds(
    """A list of Relay IDs"""
    ids: [ID!]!
  ): [CloudProject]

  """Returns an object conforming to the Relay spec"""
  node(id: ID!): Node

  """A user within the Cypress Cloud"""
  viewer: CloudUser
}
